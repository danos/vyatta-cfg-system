#
# Vyatta router specific sysctl settings.
# See sysctl.conf (5) for information.
#

# Send all core files to /var/core/core.program.pid.time
kernel.core_pattern=/var/core/core-%e-%p-%t

# the following stops low-level messages on console
kernel.printk = 4 4 1 7

# Disable the option for raw sockets in the default VRF context being used
# across all VRF domains. Note that the corresponding options for UDP & TCP
# services & sockets are already disabled by default. For more details, see
# https://www.kernel.org/doc/Documentation/networking/vrf.txt. 
net.ipv4.raw_l3mdev_accept=0

# ARP configuration
#  arp_accept - accept gratuitous ARP frames
#  arp_announce - avoid local addresses no on target's subnet
#  arp_filter - allow multiple network interfaces on same subnet
#     defaults to 1 so set all to 0 so vrrp interfaces can override it.
#  arp_ignore - reply only if target IP is local_address on the interface
net.ipv4.conf.all.arp_accept=1
net.ipv4.conf.all.arp_announce=2
net.ipv4.conf.all.arp_filter=0
net.ipv4.conf.all.arp_ignore=1

# reset promiscous arp response
net.ipv4.conf.default.arp_filter=1

# Default to not responding link-detect if down
net.ipv4.conf.default.link_filter=2

# Enable packet forwarding for IPv4
net.ipv4.ip_forward=1

# if a primary address is removed from an interface promote the
# secondary address if available
net.ipv4.conf.all.promote_secondaries=1

# Ignore ICMP broadcasts sent to broadcast/multicast
net.ipv4.icmp_echo_ignore_broadcasts=1

# Ignore bogus ICMP errors
net.ipv4.icmp_ignore_bogus_error_responses=1

# Send ICMP responses with primary address of exiting interface
net.ipv4.icmp_errors_use_inbound_ifaddr=1

# Raise max IPv4 group memberships to INT_MAX
net.ipv4.igmp_max_memberships=2147483647

# Log packets with impossible addresses to kernel log
net.ipv4.conf.all.log_martians=1
net.ipv4.conf.default.log_martians=1

# Do not ignore all ICMP ECHO requests by default
net.ipv4.icmp_echo_ignore_all=0

# Disable source validation by default
net.ipv4.conf.all.rp_filter=0
net.ipv4.conf.default.rp_filter=0

# Enable tcp syn-cookies by default
net.ipv4.tcp_syncookies=1

# Enable ECN
net.ipv4.tcp_ecn=1

# Enable TCP MTU probing
net.ipv4.tcp_mtu_probing=1

# Disable accept_redirects by default for any interface
net.ipv4.conf.all.accept_redirects=0
net.ipv4.conf.default.accept_redirects=0

# Disable accept_source_route by default
net.ipv4.conf.all.accept_source_route=0
net.ipv4.conf.default.accept_source_route=0

# Enable send_redirects by default
net.ipv4.conf.all.send_redirects=1
net.ipv4.conf.default.send_redirects=1

# Disable IPv6 autoconf by default on all interfaces
net.ipv6.conf.all.autoconf=0
net.ipv6.conf.default.autoconf=0

# Enable IPv6 by default on all interfaces
net.ipv6.conf.all.disable_ipv6=0
net.ipv6.conf.default.disable_ipv6=0

# Keep IPv6 address on device down
net.ipv6.conf.all.keep_addr_on_down=1
net.ipv6.conf.default.keep_addr_on_down=1

# Kernel param prior to introduction of keep_addr_on_down 
net.ipv6.conf.all.flush_addr_on_down=0
net.ipv6.conf.default.flush_addr_on_down=0

# Disable enhanced DAD (RFC7527)
net.ipv6.conf.all.enhanced_dad=0
net.ipv6.conf.default.enhanced_dad=0

net.ipv6.conf.default.accept_source_route = 0
net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_redirects = 0
net.ipv6.conf.all.accept_redirects = 0

# Set traffic class of ND packets to network control (CS6) as per RFC4594
net.ipv6.conf.default.ndisc_tclass=0xC0
net.ipv6.conf.all.ndisc_tclass=0xC0

# Enable forwarding
net.ipv6.conf.all.forwarding = 1

# Increase route table limit
net.ipv6.route.max_size = 32768

# Increase size of buffer for netlink
net.core.rmem_max=1073741824

# Use fq_codel as default qdisc
net.core.default_qdisc = fq_codel

# Enable JIT for BPF programs for improving performance of packets
# punted from software dataplane
net.core.bpf_jit_enable = 1
# Enable JIT kallsyms export for debugging/tracing purposes
net.core.bpf_jit_kallsyms = 1
# Request hardening to mitigate potential for bugs in JIT compiler
net.core.bpf_jit_harden = 2
